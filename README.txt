このプログラムは「３Dオブジェクトを表示する頒布可能なプログラム」を目的として開発しています。

「実行方法」
例題プログラムの実行の方法は以下の通りです。

このREADME.txtが存在するディレクトリで次のコマンドを入れてください。

$ make test

または

$ python Example.py



「バージョン」
distディレクトリには開発までの各バージョンが保存されています。
バージョン体系は以下の通りです。（１）

Dragon_Programming_Process-x.y.z

x： メジャーバージョン番号
	下位互換性なし
	アーキテクチャの大規模な改修など
y：マイナーバージョン番号
	下位互換性ほぼあり（＝リコンパイルや手動微修正により動作）
z： リビジョン番号
	機能追加
	下位互換性あり



「開発履歴」
0.1.30	
0.1.29	
0.1.28	
0.1.27	
0.1.26	
0.1.25	
0.1.24	イベント駆動に入るメインループの位置を動かし、スズメバチを加えて、ウィンドウのタイトルを改善
0.1.23	スズメバチとうさぎに備えてリファクタリング
0.0.22	拡大(S)と縮小(s)の機能を付加する。
0.0.21	ウィンドウのクローズボタンを有効にする。
0.0.20	三角形群を集めて、ドラゴンを出現させる。
0.0.19	頂点群を集めてみる。
0.0.18	頂点群と三角形群の字句解析を行ってみる。
0.0.17	頂点数と三角形数を獲得し、頂点群と三角形群のループを廻ってみる。
0.0.16	字句解析のプログラム制御構造を作る。
0.0.15	ファイルから1行ずつ読み込んで字句に分解して書き出してみる。
0.0.14	ドラゴンのデータをダウンロードする。（dragon.txt）
0.0.13	三角形のレンダリングを作る。
0.0.12	三角形の法線単位ベクトルを計算する。（2つのベクトルの外積を算出して正規化する。）
0.0.11	レンダリングを作る。（ディスプレイリストには三角形群のレンダリング結果がコンパイルされて格納済み。）
0.0.10	ディスプレイリストを作る。（ドラゴンのレンダリングをコンパイルしたOpenGLコマンド列を作る。）
0.0.9	視界と照明を設定し、XYZ軸を描き、座標系回転に備え、レンダリングのための構造を作る。
0.0.8	マウスボタンの処理を作る。（マウスボタン情報を書き出すだけで何もしない。）
0.0.7	キーボードの処理を作る。（q/Q/Escで終了、r/Rでリセット、x/XでX軸回転、y/YでY軸回転、z/ZでZ軸回転）
0.0.6	ウィンドウのサイズ変更をした際にOpenGLを再形成する。
0.0.5	空のウィンドウを出現させる。（コールバックための関数群＝メソッド群をOpenGLに伝える。）
0.0.4	クラス群の中に中身の無いメソッド群を作る。（メソッドのスケルトン＝スタブを作る。）
0.0.3	クラス群の中に中身の無いフィールド群を作る。（フィールドのスケルトン＝スタブを作る。）
0.0.2	中身の無いクラス群を作る。（クラスのスケルトン＝スタブを作る。）
0.0.1	ドラゴンの3次元描画にOpenGLを用いる。頒布用のスケルトンを作成。



「参考文献」
１）TERASOLUNA 著　“TERASOLUNA Framework Wiki - TERASOLUNA Framework - SourceForge.JP　「バージョン体系について」”　　
　　http://sourceforge.jp/projects/terasoluna/wiki/Version


--- 上前大地

